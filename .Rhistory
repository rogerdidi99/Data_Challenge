ride_length <- aggregate(ride_timestamps$timestamp, by=list(ride_id=ride_timestamps$ride_id), FUN=function(x)
range(x)[2] - range(x)[1])
ride_length$x <- as.POSIXlt(ride_length$x)
typeof(ride_length$x)
as.POSIXlt(ride_length$x[1])
ride_length$x[1]
ride_length$x <- as.numeric(ride_length$x)
timediff <- function(time1, time2) {
diff = difftime(time1, time2)
if (units(diff) == "secs") {
return(as.numeric(diff) / 60)
}
if (units(diff) == "hours") {
return(as.numeric(diff) * 60)
}
return(as.numeric(diff))
}
# subtract dropped off from requested time
ride_length <- aggregate(ride_timestamps$timestamp, by=list(ride_id=ride_timestamps$ride_id), FUN=function(x)
timediff(range(x)[2], range(x)[1]))
# subtract dropped off from requested time
ride_length <- aggregate(ride_timestamps$timestamp, by=list(ride_id=ride_timestamps$ride_id), FUN=function(x)
timediff(range(x)[2], range(x)[1]))
ride_length$x <- as.numeric(ride_length$x)
ride_length$x <- as.POSIXlt(ride_length$x)
ride_length <- aggregate(ride_timestamps$timestamp, by=list(ride_id=ride_timestamps$ride_id), FUN=function(x)
timediff(range(x)[2], range(x)[1]))
# subtract dropped off from requested time
temp <- ride_timestamps[which(ride_timestamps$driver_id %in% driver_out),]
ride_length <- aggregate(temp$timestamp, by=list(ride_id=temp$ride_id), FUN=function(x)
timediff(range(x)[2], range(x)[1]))
ride_length$x <- as.POSIXlt(ride_length$x)
ride_length <- aggregate(temp$timestamp, by=list(ride_id=temp$ride_id), FUN=function(x)
timediff(x[2], x[1]))
ride_length$x <- as.POSIXlt(ride_length$x)
typeof(ridelength$x[1])
typeof(ride_length$x[1])
#only pickedup and droppedoff
temp <- ride_timestamps[which(ride_timestamps$event == 'picked_up_at' |
ride_timestamps$event == 'dropped_off_at'),]
travel_times <- aggregate(temp$timestamp, by=list(ride_id=temp$ride_id), FUN=function(x)
range(x)[2] - range(x)[1])
#only pickedup and droppedoff
temp2 <- temp1[which(temp1$event == 'picked_up_at' |
temp1$event == 'dropped_off_at'),]
# subtract dropped off from requested time
temp1 <- ride_timestamps[which(ride_timestamps$driver_id %in% driver_out),]
#only pickedup and droppedoff
temp2 <- temp1[which(temp1$event == 'picked_up_at' |
temp1$event == 'dropped_off_at'),]
travel_times <- aggregate(temp$timestamp, by=list(ride_id=temp$ride_id), FUN=function(x)
range(x)[2] - range(x)[1])
head(travel_times)
travel_times <- aggregate(temp$timestamp, by=list(ride_id=temp$ride_id), FUN=function(x)
range(x)[2] - range(x)[1])
travel_times <- aggregate(temp2$timestamp, by=list(ride_id=temp2$ride_id), FUN=function(x)
timediff(x[2]) - timediff(x[1]))
#only pickedup and droppedoff
temp2 <- temp1[which(temp1$event == 'picked_up_at' |
temp1$event == 'dropped_off_at'),]
head(temp1)
travel_times <- aggregate(temp2$timestamp, by=list(ride_id=temp2$ride_id), FUN=function(x)
timediff(x[5]) - timediff(x[1]))
ride_length <- aggregate(temp$timestamp, by=list(ride_id=temp$ride_id), FUN=function(x)
timediff(x[5], x[1]))
# subtract dropped off from requested time
temp1 <- ride_timestamps[which(ride_timestamps$driver_id %in% driver_out),]
ride_length <- aggregate(temp1$timestamp, by=list(ride_id=temp1$ride_id), FUN=function(x)
timediff(x[5], x[1]))
#only pickedup and droppedoff
temp2 <- temp1[which(temp1$event == 'picked_up_at' |
temp1$event == 'dropped_off_at'),]
travel_times <- aggregate(temp2$timestamp, by=list(ride_id=temp2$ride_id), FUN=function(x)
timediff(x[2]) - timediff(x[1]))
head(temp2)
travel_times <- aggregate(temp2$timestamp, by=list(ride_id=temp2$ride_id), FUN=function(x)
timediff(x[2]) - timediff(x[1]))
timediff(x[2], x[1])
travel_times <- aggregate(temp2$timestamp, by=list(ride_id=temp2$ride_id), FUN=function(x) timediff(x[2], x[1])
travel_times <- aggregate(temp2$timestamp, by=list(ride_id=temp2$ride_id), FUN=function(x) timediff(x[2], x[1]))
travel_times <- aggregate(temp2$timestamp, by=list(ride_id=temp2$ride_id), FUN=function(x) timediff(x[2], x[1]))
# get times with no revenue
wait_times <- as.data.frame(travel_times$ride_id, timediff(as.POSIXlt(ride_length$x), as.POSIXlt(travel_times$x)))
# get times with no revenue
wait_times <- as.data.frame(travel_times$ride_id, timediff(ride_length$x, travel_times$x))
# get times with no revenue
wait_times <- as.data.frame(travel_times$ride_id, ride_length$x - travel_times$x)
?as.data.frame
# get times with no revenue
wait_times$ride_id <- as.data.frame(travel_times$ride_id)
wait_times$time <- ride_length$x - travel_times$x)
wait_times$time <- ride_length$x - travel_times$x
head(wait_times)
# get times with no revenue
wait_times <- as.data.frame(travel_times$ride_id)
head(wait_times)
# get times with no revenue
wait_times <- as.data.frame(travel_times$ride_id, colnames=c('ride_id'))
head(wait_times)
# get times with no revenue
wait_times <- as.data.frame(travel_times$ride_id, col.names=c('ride_id'))
head(wait_times)
colnames(wait_times) <- 'ride_id'
head(wait_times)
wait_times$time <- ride_length$x - travel_times$x
head(wait_times)
wait_times <- inner_join(ride_ids[,c('driver_id', 'ride_id')], wait_times, by='ride_id')
head(wait_times)
length(wait_times$driver_id)
head(travel_times)
wait_times
head(ride_timestamps)
# subtract dropped off from requested time
ride_summary <- aggregate(ride_timestamps$timestamp, by=list(ride_id=ride_timestamps$ride_id), FUN=function(x)
timediff(x[5], x[1]))
head(ride_summary)
ride_summary[ride_summary$ride_id == '002be0ffdc997bd5c50703158b7c2491',]
ride_summary$x[ride_summary$ride_id == '002be0ffdc997bd5c50703158b7c2491']
ride_summary$ride_id[ride_summary$ride_id == '002be0ffdc997bd5c50703158b7c2491']
ride_summary[which(ride_summary$ride_id == '002be0ffdc997bd5c50703158b7c2491'),]
match('002be0ffdc997bd5c50703158b7c2491', ride_summary$ride_id)
# subtract dropped off from requested time
ride_summary <- aggregate(ride_timestamps$timestamp, by=list(ride_id=ride_timestamps$ride_id), FUN=function(x)
range(x)[2] - range(x)[1])
head(ride_summary)
ride_timestamps[which(ride_timestamps$ride_id == '00003037a262d9ee40e61b5c0718f7f0'),]
ride_timestamps[which(ride_timestamps$ride_id == '00005eae40882760d675da5effb89ae3'),]
#only pickedup and droppedoff
temp2 <- ride_timestamps[which(ride_timestamps$event == 'picked_up_at' | ride_timestamps$event == 'dropped_off_at'),]
travel_times <- aggregate(temp2$timestamp, by=list(ride_id=temp2$ride_id), FUN=function(x) timediff(x[2], x[1]))
travel_times <- aggregate(temp2$timestamp, by=list(ride_id=temp2$ride_id), FUN=function(x) range(x)[2] -range(x)[1])
head(travel_times)
head(ride_summary)
colnames(ride_summary)[2]
# get times with no revenue
colnames(ride_summary)[2] <- 'totaltime'
head(travel_times)
ride_summary$norider <- ride_summary$totaltime - travel_times$x
head(ride_summary)
ride_summary$totaltime - travel_times$x
length(ride_summary$ride_id)
length(travel_times$ride_id)
ride_summary$norider <- (ride_summary$totaltime - travel_times$x)
temp <- ride_summary$totaltime - travel_times$x
ride_summary$norider <- (as.numeric(ride_summary$totaltime) - as.numeric(travel_times$x))
ride_summary <- inner_join(ride_ids[,c('driver_id', 'ride_id')], ride_summary, by='ride_id')
head(ride_summary)
ride_summary$percentnorev <- ride_summary$norider / ride_summary$totaltime
head(ride_summary)
ride_summary$percentnorev <- ride_summary$norider / as.numeric(ride_summary$totaltime)
ride_summary$totaltime <- as.numeric(ride_summary$totaltime)
head(ride_summary)
ride_summary[which(ride_summary$driver_id %in% driver_out)]
ride_summary[which(ride_summary$driver_id %in% driver_out),]
ride_timestamps[which(ride_timestamps$driver_id == '0004a3db0fb83d99007c394173660ac3'),]
ride_timestamps[which(ride_timestamps$ride_id == '0004a3db0fb83d99007c394173660ac3'),]
range(ride_summary$timestamp[which(ride_summary$driver_id %in% driver_out)])
ride_summary$timestamp[which(ride_summary$driver_id %in% driver_out)]
ride_summary[which(ride_summary$driver_id %in% driver_out),]
range(ride_summary$timestamp[which(ride_summary$ride_id == '0004a3db0fb83d99007c394173660ac3')])
ride_summary$timestamp[which(ride_summary$ride_id == '0004a3db0fb83d99007c394173660ac3')]
ride_summary$ride_id
ride_summary[which(ride_summary$ride_id == '0004a3db0fb83d99007c394173660ac3'),]
ride_timestamps$timestamp[which(ride_summary$ride_id == '0004a3db0fb83d99007c394173660ac3')]
ride_timestamps[which(ride_timestamps$ride_id == '0004a3db0fb83d99007c394173660ac3'),]
ride_timestamps$timestamp[which(ride_timestamps$ride_id == '0004a3db0fb83d99007c394173660ac3'),]
ride_timestamps$timestamp[which(ride_timestamps$ride_id == '0004a3db0fb83d99007c394173660ac3')]
range(ride_timestamps$timestamp[which(ride_timestamps$ride_id == '0004a3db0fb83d99007c394173660ac3')])
# subtract dropped off from requested time
ride_summary <- aggregate(ride_timestamps$timestamp, by=list(ride_id=ride_timestamps$ride_id), FUN=function(x)
timediff(range(x)[2], range(x)[1]))
travel_times <- aggregate(temp2$timestamp, by=list(ride_id=temp2$ride_id),
FUN=function(x) timediff(range(x)[2], range(x)[1]))
head(ride_summary)
ride_summary[which(ride_summary$ride_id == '0004a3db0fb83d99007c394173660ac3'),]
# get times with no revenue
ride_summary$norider <- (as.numeric(ride_summary$totaltime) - as.numeric(travel_times$x))
head(travel_times)
travel_times[which(ride_summary$ride_id == '0004a3db0fb83d99007c394173660ac3'),]
# get times with no revenue
ride_summary$norider <- (ride_summary$totaltime - travel_times$x)
head(ride_summary)
head(travel_times)
# get times with no revenue
ride_summary$norider <- (ride_summary$totaltime - travel_times$x)
length(ride_summary$totaltime)
# get times with no revenue
ride_summary$norider <- (ride_summary$x - travel_times$x)
head(ride_summary)
colnames(ride_summary)[2] <- 'totaltime'
typeof(ride_summary$totaltime[1])
#ride_summary$totaltime <- as.numeric(ride_summary$totaltime)
ride_summary <- inner_join(ride_ids[,c('driver_id', 'ride_id')], ride_summary, by='ride_id')
ride_summary$percentnorev <- ride_summary$norider / ride_summary$totaltime
ride_summary[which(ride_summary$driver_id %in% driver_out),]
# driver ids with outlier revenue
driverid_out <- driver_rev$driver_id[which(driver_rev$total_rev %in% boxplot(driver_rev$total_rev)$out)]
ride_summary[which(ride_summary$driver_id %in% driverid_out),]
head(ride_summary)
aggregate(ride_summary$percentnorev, by=list(ride_id=ride_summary$ride_id), FUN=mean)
meannorev <- aggregate(ride_summary$percentnorev, by=list(ride_id=ride_summary$ride_id), FUN=mean)
ride_summary[which(ride_summary$driver_id %in% driverid_out),]
meannorev <- aggregate(ride_summary$percentnorev, by=list(driver_id=ride_summary$driver_id), FUN=mean)
meannorev[which(meannorev$driver_id == '002be0ffdc997bd5c50703158b7c2491'),]
ride_summary[which(ride_summary$driver_id == '002be0ffdc997bd5c50703158b7c2491'),]
mean(ride_summary$percentnorev)
ride_summary$percentnorev
meannorev
meannorev[order(-meannorev$x)]
meannorev[order(-meannorev$x),]
head(meannorev[order(-meannorev$x),])
head(meannorev[order(meannorev$x),])
driver_rev$total_rev[driver_rev$driver_id == 'bf2693c5774a77e478e418119be97c5c']
# driver ids with outlier revenue
driverid_out <- driver_rev$driver_id[which(driver_rev$total_rev %in% boxplot(driver_rev$total_rev)$out)]
head(ride_summary)
ride_ids[which(ride_ids$ride_id == '006d61cf7446e682f7bc50b0f8a5bea5'),]
length(driver_ids$driver_id)
head(meannorev)
meannorev[order(-meannorev$x)]
meannorev[order(-meannorev$x),]
head(meannorev[order(-meannorev$x),])
length(driverid_out)
length(driverid_out[1])
head(driverid_out)
head(meannorev[order(-meannorev$x),], 5)
head(meannorev[order(-meannorev$x),], 7)
ride_timestamps[which(ride_timestamps$ride_id == '72f0fa0bd86800e9da5c4dced32c8735'),]
head(ride_timestamps)
ride_timestamps$dayinfo
strftime(2016-04-20 11:56:50, format="%H")
ride_timestamps$timestamp[1]
strftime(ride_timestamps$timestamp[1], format="%H")
strftime(ride_timestamps$timestamp[1], format="%H%D%S")
strftime(ride_timestamps$timestamp[1], format="%H:%M:%S")
timeofday <- function(datetime) {
num = as.numeric(strftime(datetime, format="%H"))
if ((num < 5) | (num > 19)) return("night")
if (5 < num < 10) return("morning rush")
as.numeric(strftime(ride_timestamps$timestamp[1], format="%H"))
timeofday <- function(datetime) {
num = as.numeric(strftime(datetime, format="%H"))
if ((num < 5) | (num > 19)) return("night")
if (5 < num < 10) return("morning rush")
5 < 19
timeofday <- function(datetime) {
num = as.numeric(strftime(datetime, format="%H"))
if ((num < 5) | (num > 19)) return("night")
if ((5 < num) | (num < 10)) return("morning rush")
if ((10 < num) | (num < 12)) return("morning")
if ((12 < num) | (num < 3)) return("afternoon")
if ((17 < num) | (num < 22)) return("evening rush")
else return(NULL)
}
ride_timestamps$dayinfo <- timeofday(ride_timestamps$timestamp)
ride_timestamps$dayinfo[1] <- 'timeofday(ride_timestamps$timestamp)'test
ride_timestamps$dayinfo[1] <- 'test'
head(ride_timestamp)
head(ride_timestamps)
ride_timestamps$timestamps
ride_timestamps$timestamp
ride_timestamps$timestamps[1]
ride_timestamps$timestamp[1]
timeofday <- function(datetime) {
num = as.numeric(strftime(datetime, format="%H"))
if ((num < 5) | (num > 19)) return("night")
if ((5 < num) & (num < 10)) return("morning rush")
if ((10 < num) & (num < 12)) return("morning")
if ((12 < num) & (num < 15)) return("afternoon")
if ((17 < num) & (num < 22)) return("evening rush")
else return(NULL)
}
for (i in 1:length(ride_timestamps$ride_id)) {
ride_timestamps$dayinfo[i] <- timeofday(ride_timestamps$timestamp[i])
}
ride_timestamps$timestamp[1]
length(ride_timestamps$ride_id)
for (i in 1:length(ride_timestamps$ride_id)) {
ride_timestamps$dayinfo[i] <- timeofday(ride_timestamps$timestamp[i])
}
for (i in 1:length(ride_timestamps$timestamp)) {
ride_timestamps$dayinfo[i] <- timeofday(ride_timestamps$timestamp[i])
}
length(ride_timestamps$dayinfo)
length([1 ,2, 3, 4, 5])
length((1 ,2, 3, 4, 5)
length((1 ,2, 3, 4, 5))
length(1 ,2, 3, 4, 5)
length(c(1,2,3,4,5))
test = c(1,2,3,4,5)
test[length(test)]
timeofday <- function(datetime) {
num = as.numeric(strftime(datetime, format="%H"))
if ((num < 5) | (num > 19)) return("night")
if ((5 < num) & (num < 10)) return("morning rush")
if ((10 < num) & (num < 12)) return("morning")
if ((12 < num) & (num < 15)) return("afternoon")
if ((17 < num) & (num < 22)) return("evening rush")
else return(NULL)
}
for (i in 1:(length(ride_timestamps$timestamp))) {
ride_timestamps$dayinfo[i] <- timeofday(ride_timestamps$timestamp[i])
}
for (i in 1:5){
print(test[i])
}
tail(ride_timestamps)
tail(ride_timestamps, 10)
attributes(ride_timestamps$timestamp)$tzone <- "America/Los_Angeles"
head(ride_timestamps$timestamp)
attributes(ride_timestamps$timestamp)$tzone <- "UTC"
attributes(ride_timestamps$timestamp)$tzone <- "UTC"
head(ride_timestamps$timestamp)
head(ride_timestamps$driver_id)
head(ride_timestamps$ride_id)
attributes(ride_timestamps$timestamp)$tzone <- "America/Los_Angeles"
head(ride_timestamps$timestamp)
timeofday <- function(datetime) {
num = as.numeric(strftime(datetime, format="%H"))
if ((num < 5) | (num > 19)) return("night")
if ((5 < num) & (num < 10)) return("morning rush")
if ((10 < num) & (num < 12)) return("morning")
if ((12 < num) & (num < 15)) return("afternoon")
if ((17 < num) & (num < 22)) return("evening rush")
else return(NULL)
}
for (i in 1:(length(ride_timestamps$timestamp))) {
ride_timestamps$dayinfo[i] <- timeofday(ride_timestamps$timestamp[i])
}
for (i in 1:(length(ride_timestamps$timestamp))) {
ride_timestamps$dayinfo[i] <- timeofday(ride_timestamps$timestamp[i])
count++
}
count = 0
for (i in 1:(length(ride_timestamps$timestamp))) {
ride_timestamps$dayinfo[i] <- timeofday(ride_timestamps$timestamp[i])
count = count + 1
}
count
ride_timestamps$timestamp[5]
ride_timestamps$timestamp[6]
timeofday(ride_timestamps$timestamp[6])
timeofday <- function(datetime) {
num = as.numeric(strftime(datetime, format="%H"))
if ((num < 5) | (num > 19)) return("night")
if ((5 < num) & (num < 10)) return("morning rush")
if ((10 < num) & (num < 12)) return("morning")
if ((12 < num) & (num < 15)) return("afternoon")
if ((15 < num) & (num < 22)) return("evening rush")
else return(NULL)
}
for (i in 1:(length(ride_timestamps$timestamp))) {
ride_timestamps$dayinfo[i] <- timeofday(ride_timestamps$timestamp[i])
count = count + 1
}
count = 0
for (i in 1:(length(ride_timestamps$timestamp))) {
ride_timestamps$dayinfo[i] <- timeofday(ride_timestamps$timestamp[i])
count = count + 1
}
count
ride_timestamps$timestamp[6]
strftime(ride_timestamps$timestamp[6])
strftime(ride_timestamps$timestamp[6], format="%H")
timeofday <- function(datetime) {
num = as.numeric(strftime(datetime, format="%H"))
if ((num < 5) | (num >= 19)) return("night")
if ((5 <= num) & (num < 10)) return("morning rush")
if ((10 <= num) & (num < 12)) return("morning")
if ((12 <= num) & (num < 15)) return("afternoon")
if ((15 <= num) & (num < 19)) return("evening rush")
else return(NULL)
}
count = 0
for (i in 1:(length(ride_timestamps$timestamp))) {
ride_timestamps$dayinfo[i] <- timeofday(ride_timestamps$timestamp[i])
count = count + 1
}
head(ride_timestamps)
ride_timestamps <- read_csv("C:/Users/Edwin/Downloads/ride_timestamps.csv")
attributes(ride_timestamps$timestamp)$tzone <- "UTC"
timeofday <- function(datetime) {
num = as.numeric(strftime(datetime, format="%H"))
if ((num < 5) | (num >= 19)) return("night")
if ((5 <= num) & (num < 10)) return("morning rush")
if ((10 <= num) & (num < 12)) return("morning")
if ((12 <= num) & (num < 15)) return("afternoon")
if ((15 <= num) & (num < 19)) return("evening rush")
else return(NULL)
}
head(ride_ids)
head(ride_timestamps)
acceptedat <- ride_timestamps[which(ride_timestamps$event == 'accepted_at'),]
head(ride_timestamps)
acceptedat <- ride_timestamps[which(ride_timestamps$event == 'accepted_at'),]
head(acceptedat)
head(ride_ids)
colnames(acceptedat) <- c(colnames(acceptedat), dayinfo)
head(acceptedat)
cbind(acceptedat, dayinfo)
acceptedat$dayinfo <- NULL
head(acceptedat)
acceptedat$dayinfo <- 0
head(acceptedat)
acceptedat$dayinfo <- ''
head(acceptedat)
for (i in 1:(length(acceptedat$ride_id))) {
acceptedat$dayinfo[i] <- timeofday(acceptedat$timestamp[i])
count = count + 1
}
for (i in 1:(length(acceptedat$ride_id))) {
acceptedat$dayinfo[i] <- timeofday(acceptedat$timestamp[i])
}
head(acceptedat)
attributes(ride_timestamps$timestamp)$tzone <- "UTC"
acceptedat$timestamp[1]
attributes(ride_timestamps$timestamp)$tzone <- "America/Los_Angeles"
attributes(ride_timestamps$acceptedat)$tzone <- "America/Los_Angeles"
head(ride_timestamps)
head(ride_timestamps$timestamp)
acceptedat[c("ride_id", "timestamp")]
ride_ids <- inner_join(ride_ids, acceptedat[c("ride_id", "timestamp")], by="ride_id")
head(ride_ids)
ride_ids$timestamp <- NULL
head(ride_ids)
ride_ids <- inner_join(ride_ids, acceptedat[c("ride_id", "dayinfo")], by="ride_id")
head(ride_ids)
tail(ride_ids)
sumprime <- aggregate(ride_ids$ride_prime_time, driver_id=ride_ids$driver_id, FUN=sum)
sumprime <- aggregate(ride_ids$ride_prime_time, by=list(driver_id=ride_ids$driver_id), FUN=sum)
head(sumprime)
driver_ids$totalprimetime <- inner_join(driver_ids, sumprime, by="driver_id")
length(driver_ids$driver_id)
length(sumprime$driver_id)
head(sumprime[order(-sumprime$x)])
head(sumprime[order(-sumprime$x),])
head(sumprime[order(sumprime$x),])
sumprime <- aggregate(ride_ids$ride_prime_time, by=list(driver_id=ride_ids$driver_id), FUN=sum)
length(sumprime$driver_id)
length(unique(ride_ids$driver_id))
length(unique(driver_ids$driver_id))
# Edwin
ride_ids <- read_csv("C:/Users/Edwin/Downloads/ride_ids.csv")
library(tidyverse)
ride_ids$revenue <- round((2.2 + 2.7 + 0.39 * ride_ids$ride_duration/60 + 0.91 * 0.000621371 * ride_ids$ride_distance) * (1 + ride_ids$ride_prime_time/100), digits = 2)
ride_ids %>%
group_by(driver_id) %>%
summarise(total_rev = sum(revenue)) %>%
arrange(desc(total_rev))
head(ride_ids)
length(unique(ride_ids$driver_id))
head(acceptedat)
length(acceptedat$ride_id)
length(ride_ids$ride_id)
# Edwin
ride_ids <- read_csv("C:/Users/Edwin/Downloads/ride_ids.csv")
length(ride_ids$ride_id)
length(ride_timestamps$timestamp)
length(ride_timestamps$timestamp) / 5
distinct(acceptedat)
length(acceptedat)
length(acceptedat$ride_id)
ride_ids <- inner_join(ride_ids, acceptedat[c("ride_id", "dayinfo")], by="ride_id")
head(ride_ids)
length(ride_ids$driver_id)
# Edwin
ride_ids <- read_csv("C:/Users/Edwin/Downloads/ride_ids.csv")
ride_ids$revenue <- round((2.2 + 2.7 + 0.39 * ride_ids$ride_duration/60 + 0.91 * 0.000621371 * ride_ids$ride_distance) * (1 + ride_ids$ride_prime_time/100), digits = 2)
ride_ids %>%
group_by(driver_id) %>%
summarise(total_rev = sum(revenue)) %>%
arrange(desc(total_rev))
alldata <- inner_join(ride_ids, acceptedat[c("ride_id", "dayinfo")], by="ride_id")
length(ride_ids$driver_id)
length(alldata$driver_id)
length(acceptedat$ride_id)
length(sumprime$driver_id)
alldata <- left_join(ride_ids, acceptedat[c("ride_id", "dayinfo")], by="ride_id")
length(alldata$driver_id)
head(alldata)
sumprime <- aggregate(alldata$ride_prime_time, by=list(driver_id=alldata$driver_id), FUN=sum)
driver_ids$totalprimetime <- inner_join(driver_ids, sumprime, by="driver_id")
length(sumprime$driver_id)
length(unique(sumprime$driver_id))
length(unique(driver_ids$driver_id))
driver_ids$totalprimetime <- inner_join(driver_ids, sumprime, by="driver_id")
head(sumprime)
head(driver_ids)
colnames(sumprime) <- c("driver_id", "totalprimetime")
driver_ids <- inner_join(driver_ids, sumprime, by="driver_id")
head(driver_ids)
# driver id and revenue
driver_rev <- ride_ids %>%
group_by(driver_id) %>%
summarise(total_rev = sum(revenue)) %>%
arrange(desc(total_rev))
length(driver_rev$driver_id)
length(alldata$driver_id)
length(unique(alldata$driver_id))
alldata <- inner_join(alldata, driver_rev, by="driver_id")
head(alldata)
driver_ids <- inner_join(driver_ids, driver_rev, by="driver_id")
head(driver_ids)
head(driver_ids[order(driver_ids$totalprimetime)],)
head(driver_ids[order(driver_ids$totalprimetime),])
head(driver_ids[order(-driver_ids$totalprimetime),])
head(driver_ids[order(-driver_ids$total_rev),])
boxplot(driver_ids$totalprimetime)
boxplot(driver_ids$total_rev)
par(mfrow=c(1,2))
boxplot(driver_ids$totalprimetime)
boxplot(driver_ids$total_rev)
