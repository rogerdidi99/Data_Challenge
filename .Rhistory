knitr::opts_chunk$set(echo = TRUE)
library(readr)
ride_ids <- read_csv("~/Desktop/Lyft Data Challenge/ride_ids.csv")
# Edwin
rides <- read_csv("C:/Users/Edwin/Downloads/ride_ids.csv")
drivers <- read_csv("C:/Users/Edwin/Downloads/driver_ids.csv")
timestamps <- read_csv("C:/Users/Edwin/Downloads/ride_timestamps.csv")
library(readr)
# Edwin
rides <- read_csv("C:/Users/Edwin/Downloads/ride_ids.csv")
drivers <- read_csv("C:/Users/Edwin/Downloads/driver_ids.csv")
timestamps <- read_csv("C:/Users/Edwin/Downloads/ride_timestamps.csv")
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
ride_ids$revenue <- round((2.2 + 2.7 + 0.39 * ride_ids$ride_duration/60 + 0.91 * 0.000621371 * ride_ids$ride_distance) * (1 + ride_ids$ride_prime_time/100), digits = 2)
library(readr)
# Edwin
ride_ids <- read_csv("C:/Users/Edwin/Downloads/ride_ids.csv")
driver_ids <- read_csv("C:/Users/Edwin/Downloads/driver_ids.csv")
ride_timestamps <- read_csv("C:/Users/Edwin/Downloads/ride_timestamps.csv")
library(tidyverse)
ride_ids$revenue <- round((2.2 + 2.7 + 0.39 * ride_ids$ride_duration/60 + 0.91 * 0.000621371 * ride_ids$ride_distance) * (1 + ride_ids$ride_prime_time/100), digits = 2)
ride_ids %>%
group_by(driver_id) %>%
summarise(total_rev = sum(revenue)) %>%
arrange(desc(total_rev))
library(tidyverse)
ride_ids$revenue <- round((2.2 + 2.7 + 0.39 * ride_ids$ride_duration/60 + 0.91 * 0.000621371 * ride_ids$ride_distance) * (1 + ride_ids$ride_prime_time/100), digits = 2)
ride_ids %>%
group_by(driver_id) %>%
summarise(total_rev = sum(revenue)) %>%
arrange(desc(total_rev))
rides <-
ride_timestamps %>%
group_by(ride_id) %>%
summarise(latest_time = max(timestamp))
ride_ids2 <- inner_join(x = ride_ids, y = rides, by = "ride_id")
driver_times <-
ride_ids2 %>%
group_by(driver_id) %>%
summarise(latest_time = max(latest_time))
driver_id_idx <-
apply(driver_times, 1, function(x){
idx <- which(is.element(driver_ids$driver_id, x[[1]]))
idx
}) %>% unlist()
driver_ids_new <- driver_ids[driver_id_idx, ]
driver_times <- driver_times[1:length(driver_id_idx),]
driver_ids_new$lifetime <- driver_times$latest_time - driver_ids_new$driver_onboard_date
driver_ids_new$lifetime <- as.numeric(driver_ids_new$lifetime/24)
driver_ids_new %>% arrange(desc(lifetime))
ride_ids
ride_ids %>%
group_by(driver_id) %>%
summarise(total_rev = sum(revenue)) %>%
arrange(desc(total_rev))
driver_rev <- ride_ids %>%
group_by(driver_id) %>%
summarise(total_rev = sum(revenue)) %>%
arrange(desc(total_rev))
driver_rev
outliers <- driver_rev$driver_id[which(driver_rev$total_rev %in% boxplot(driver_rev$total_rev)$out)]
outliers
ride_timestamps <- inner_join(driver_ids$driver_id, ride_timestamps, by= 'driver_id')
ride_timestamps <- inner_join(as.data.frame(driver_ids$driver_id), ride_timestamps, by= 'driver_id')
as.data.frame(driver_ids$driver_id)
ride_timestamps <- inner_join(as.data.frame(driver_ids$driver_id), ride_timestamps, by= c('driver_ids$driverid','driver_id'))
ride_timestamps <- inner_join(as.data.frame(driver_ids$driver_id, colnames=c('driver_id')), ride_timestamps,
by='driver_id')
head(ride_timestamps)
ride_timestamps <- inner_join(ride_ids[,c('driver_id', 'ride_id')], ride_timestamps, by='driver_id')
ride_timestamps <- inner_join(ride_ids[,c('driver_id', 'ride_id')], ride_timestamps, by='ride_id')
head(ride_timestamps)
aggregate(ride_timestamps$timestamp, by=list(ride_id=ride_timestamps$ride_id), FUN=range)
range([1,2,3,4,5])
range(list(1,2,3,4,5))
range(list(1,2,3,4,5))[2]
aggregate(ride_timestamps$timestamp, by=list(ride_id=ride_timestamps$ride_id), FUN=function(x) range(x)[2] -
range(x)[1])
head(ride_timestamps)
ride_timestamps <- read_csv("C:/Users/Edwin/Downloads/ride_timestamps.csv")
ride_timestamps <- inner_join(ride_ids[,c('driver_id', 'ride_id')], ride_timestamps, by='ride_id')
# ride timestamps with outlier driver revenue
time_out <- ride_timestamps[which(ride_timestamp$driver_id %in% driver_out),]
# ride timestamps with outlier driver revenue
time_out <- ride_timestamps[which(ride_timestamps$driver_id %in% driver_out),]
# driver ids with outlier revenue
driver_out <- driver_rev$driver_id[which(driver_rev$total_rev %in% boxplot(driver_rev$total_rev)$out)]
# ride timestamps with outlier driver revenue
time_out <- ride_timestamps[which(ride_timestamps$driver_id %in% driver_out),]
head(timeout)
head(time_out)
length(time_out)
length(time_out[1])
length(time_out$driver_id)
travel_times <- aggregate(ride_timestamps$timestamp, by=list(ride_id=ride_timestamps$ride_id), FUN=function(x)
range(x)[2] - range(x)[1])
travel_times <- aggregate(ride_timestamps$timestamp, by=list(ride_id=ride_timestamps$ride_id), FUN=function(x)
range(x)[2] - range(x)[1])
head(travel_times)
travel_times <- aggregate(ride_timestamps$timestamp, by=list(ride_id=ride_timestamps$ride_id), FUN=function(totaltime)
range(totaltime)[2] - range(totaltime)[1])
head(travel_times)
head(ride_timestamps)
# subtract dropped off from requested time
ride_length <- aggregate(ride_timestamps$timestamp, by=list(ride_id=ride_timestamps$ride_id), FUN=function(x)
range(x)[2] - range(x)[1])
travel_times <-  aggregate(ride_timestamps$timestamp[which(ride_timestamps$timestamp == 'picked_up_at' |
ride_timestamps$timestamp == 'dropped_off_at')],
by=list(ride_id=ride_timestamps$ride_id), FUN=function(x)
range(x)[2] - range(x)[1])
head(travel_times)
head(ride_length)
travel_times <-  aggregate(ride_timestamps$timestamp[which(ride_timestamps$timestamp == 'picked_up_at' |
ride_timestamps$timestamp == 'dropped_off_at')],
by=list(ride_id=ride_timestamps$ride_id), FUN=function(x)
range(x)[2] - range(x)[1])
travel_times <- aggregate(ride_timestamps$timestamp[which(ride_timestamps$event == 'picked_up_at' |
ride_timestamps$event == 'dropped_off_at')],
by=list(ride_id=ride_timestamps$ride_id), FUN=function(x)
range(x)[2] - range(x)[1])
head(ride_timestamps$timestamp[which(ride_timestamps$event == 'picked_up_at' |
ride_timestamps$event == 'dropped_off_at')])
travel_times <- aggregate(ride_timestamps[which(ride_timestamps$event == 'picked_up_at' |
ride_timestamps$event == 'dropped_off_at')]$timestamps,
by=list(ride_id=ride_timestamps$ride_id), FUN=function(x)
range(x)[2] - range(x)[1])
#only pickedup and droppedoff
temp <- ride_timestamps[which(ride_timestamps$event == 'picked_up_at' |
ride_timestamps$event == 'dropped_off_at'),]
travel_times <- aggregate(temp$timestamps, by=list(ride_id=temp$ride_id), FUN=function(x)
range(x)[2] - range(x)[1])
head(temp)
travel_times <- aggregate(temp$timestamp, by=list(ride_id=temp$ride_id), FUN=function(x)
range(x)[2] - range(x)[1])
head(travel_times)
head(ride_length)
# get times with no revenue
wait_times <- as.data.frame(travel_times$ride_id, ride_length$x - travel_times$x)
head(ride_length$x)
timediff <- function(time1, time2) {
diff = difftime(time1, time2)
if (units(diff) == "secs") {
return(as.numeric(diff) / 60)
}
if (units(diff) == "hours") {
return(as.numeric(diff) * 60)
}
return(as.numeric(diff))
}
# get times with no revenue
wait_times <- as.data.frame(travel_times$ride_id, timediff(ride_length$x, travel_times$x))
# get times with no revenue
wait_times <- as.data.frame(travel_times$ride_id, timediff(as.POSIXlt(ride_length$x), as.POSIXlt(travel_times$x)))
# get times with no revenue
wait_times <- as.data.frame(travel_times$ride_id, timediff(as.POSIXlt(ride_length$x), as.POSIXlt(travel_times$x)))
head(ride_length$x)
as.POSIXlt(ride_length$x)
ride_length$x <- as.POSIXlt(ride_length$x)
ride_length$x <- as.POSIXct(ride_length$x)
knitr::opts_chunk$set(echo = TRUE)
revenue <- inner_join(rides, timestamps, by="ride_id")
head(revenue)
revenue$timeonly <- as.POSIXlt(revenue$timestamp)
head(revenue)
rides <- read_csv("C:/Users/Edwin/Downloads/ride_ids.csv")
timestamps <- read_csv("C:/Users/Edwin/Downloads/ride_timestamps.csv")
revenue <- inner_join(rides, timestamps, by="ride_id")
head(revenue)
revenue$timeonly <- as.POSIXlt(revenue$timestamp)
ride_length$x <- as.POSIXlt(ride_length$x)
ride_length$x <- as.POSIXlt(ride_length$x)
?strptime
ride_length$x <- as.POSIXlt(strptime(ride_length$x), '%H:%M:%S')
ride_length$x <- as.POSIXlt(strptime(ride_length$x), format='%H:%M:%S')
